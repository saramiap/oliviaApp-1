#!/bin/bash

# Script pour r√©soudre les probl√®mes NPM courants
# Utilisation: ./fix-npm-issues.sh

echo "üîß R√©solution des probl√®mes NPM pour Olivia APP"
echo "================================================"

# Fonction pour afficher les messages en couleur
print_info() {
    echo -e "\033[34m‚ÑπÔ∏è  $1\033[0m"
}

print_success() {
    echo -e "\033[32m‚úÖ $1\033[0m"
}

print_error() {
    echo -e "\033[31m‚ùå $1\033[0m"
}

print_warning() {
    echo -e "\033[33m‚ö†Ô∏è  $1\033[0m"
}

# V√©rifier Node.js version
print_info "V√©rification de la version Node.js..."
NODE_VERSION=$(node -v)
echo "Version Node.js d√©tect√©e: $NODE_VERSION"

if [[ "$NODE_VERSION" < "v20.0.0" ]]; then
    print_warning "Version Node.js < 20.0.0 d√©tect√©e. Mise √† jour recommand√©e."
    echo "Utilisation: nvm use 20 (si nvm est install√©)"
fi

# Nettoyer le cache NPM
print_info "Nettoyage du cache NPM..."
npm cache clean --force
print_success "Cache NPM nettoy√©"

# Configuration SSL temporaire pour les probl√®mes de certificats
print_info "Configuration temporaire pour r√©soudre les probl√®mes SSL..."

# Sauvegarder la configuration actuelle
npm config get registry > .npm-config-backup.txt
npm config get strict-ssl >> .npm-config-backup.txt

# Configuration temporaire
npm config set registry http://registry.npmjs.org/
npm config set strict-ssl false

print_warning "Configuration SSL temporairement d√©sactiv√©e"

# Installation des d√©pendances
echo ""
print_info "Installation des d√©pendances Frontend..."
cd frontend

# Supprimer node_modules et package-lock.json s'ils existent
if [ -d "node_modules" ]; then
    print_info "Suppression de node_modules existant..."
    rm -rf node_modules
fi

if [ -f "package-lock.json" ]; then
    print_info "Suppression de package-lock.json existant..."
    rm -f package-lock.json
fi

# Installation
npm install

FRONTEND_EXIT_CODE=$?

cd ..

if [ $FRONTEND_EXIT_CODE -eq 0 ]; then
    print_success "Installation Frontend r√©ussie"
else
    print_error "√âchec de l'installation Frontend"
fi

# Installation Backend
print_info "Installation des d√©pendances Backend..."
cd backend

if [ -d "node_modules" ]; then
    print_info "Suppression de node_modules backend existant..."
    rm -rf node_modules
fi

if [ -f "package-lock.json" ]; then
    print_info "Suppression de package-lock.json backend existant..."
    rm -f package-lock.json
fi

npm install

BACKEND_EXIT_CODE=$?

cd ..

if [ $BACKEND_EXIT_CODE -eq 0 ]; then
    print_success "Installation Backend r√©ussie"
else
    print_error "√âchec de l'installation Backend"
fi

# Restaurer la configuration SSL
print_info "Restauration de la configuration SSL s√©curis√©e..."
npm config set registry https://registry.npmjs.org/
npm config set strict-ssl true
print_success "Configuration SSL restaur√©e"

# R√©sum√©
echo ""
echo "üìã R√âSUM√â DE L'INSTALLATION"
echo "=========================="

if [ $FRONTEND_EXIT_CODE -eq 0 ] && [ $BACKEND_EXIT_CODE -eq 0 ]; then
    print_success "‚úÖ Installation compl√®te r√©ussie!"
    echo ""
    echo "üöÄ PROCHAINES √âTAPES:"
    echo "1. Configurer les variables d'environnement:"
    echo "   cp frontend/.env.example frontend/.env"
    echo "   # √âditer frontend/.env avec vos valeurs"
    echo ""
    echo "2. Cr√©er le fichier backend/.env:"
    echo "   cd backend && touch .env"
    echo "   # Ajouter GEMINI_API_KEY=your-api-key"
    echo ""
    echo "3. Lancer l'application:"
    echo "   Terminal 1: cd backend && npm run dev"
    echo "   Terminal 2: cd frontend && npm run dev"
    echo ""
    echo "4. Ouvrir http://localhost:5173"
else
    print_error "‚ùå √âchec de l'installation"
    echo ""
    echo "üîç SOLUTIONS ALTERNATIVES:"
    echo "1. V√©rifier votre connexion internet"
    echo "2. Essayer avec un autre r√©seau (hotspot mobile)"
    echo "3. Contacter votre administrateur r√©seau pour les proxies"
    echo "4. Utiliser yarn au lieu de npm:"
    echo "   npm install -g yarn"
    echo "   cd frontend && yarn install"
    echo "   cd ../backend && yarn install"
fi

# Nettoyer le fichier de sauvegarde
rm -f .npm-config-backup.txt

echo ""
print_info "Script termin√©."